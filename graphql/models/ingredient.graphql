"Single component of a food recipe."
type Ingredient {
    "Unique primary key."
    id: ID!

    "Ingredient name."
    name: String!

    "The amount of ingredient in a specific recipe."
    measure: String

    "When the ingredient was created."
    created_at: DateTime!

    "When the ingredient was last updated."
    updated_at: DateTime!
}

extend type Query {
    "List multiple ingredients."
    ingredients: [Ingredient!]! @paginate(defaultCount: 25)

    "Find a single ingredient by primary key."
    ingredient(id: ID! @eq): Ingredient @find
}

"An object with fields for creating new ingredient."
input CreateIngredientInput {
    "A unique string with length between 2 and 255 characters."
    name: String! @trim @rules(apply: ["string", "min:2", "max:255", "unique:ingredients,name"], attribute: "name")
}

"An object with fields for updating ingredient."
input UpdateIngredientInput @validator {
    "Primary key of existing ingredient."
    id: ID!
    "A unique string with length between 2 and 255 characters."
    name: String! @trim
}

extend type Mutation {
    "Create new ingredient."
    createIngredient(input: CreateIngredientInput! @spread): Ingredient! @create
    "Update existing ingredient."
    updateIngredient(input: UpdateIngredientInput! @spread): Ingredient! @update
    "Delete ingredient."
    deleteIngredient(id: ID!): Ingredient! @delete
}
